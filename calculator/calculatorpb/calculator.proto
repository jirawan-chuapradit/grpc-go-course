syntax = "proto3";

package calculator;
option go_package="/calculator/calculatorpb";


message CalculatorRequest {
  int64 number1 = 1;
  int64  number2 = 2;
}

message CalculatorResponse {
  int64 sum = 1;
}

message PrimeNumberManyTimesRequest {
  int32 number = 1;
}

message PrimeNumberManyTimesResponse {
  int64 result = 1;
}

message ComputeAverageRequest {
  int64 number = 1;
}

message ComputeAverageResponse {
  float average = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 maximum = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double number_root = 1;
}

service CalculatorService {
  // Unary
  rpc Calculator(CalculatorRequest) returns (CalculatorResponse) {};

  // Server Streaming
  rpc PrimeNumberDecomposition (PrimeNumberManyTimesRequest) returns (stream PrimeNumberManyTimesResponse){};

  // Client Streaming
  rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  // Bi Di streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

  // error handling
  // this RPC will throw an exception if the sent number is negative number
  // The error will being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}
